---
description: 
globs: 
alwaysApply: true
---
# 代码重构引用管理协议

## 核心原则

在进行任何代码修改（包括新增、删除、重命名文件或类）后，**必须立即检查并同步更新所有相关的 `using`、`import` 或其他形式的模块引用**。

## 工作流程

1. **修改代码**: 执行主要的代码更改，例如重命名类、移动文件或修改命名空间。

2. **同步更新引用**:
   - **新增**: 如果添加了新的依赖，请在文件顶部添加相应的引用语句。
   - **删除**: 如果移除了某个类的所有引用，请删除不再需要的引用语句。
   - **修改**: 如果重命名或移动了文件/类，请立即更新所有引用该文件/类的语句。
   - **排序**: 在新增、删除或修改引用后，**请按照项目规范对引用进行分组和排序**。推荐的顺序如下：
     1. **标准库**: 语言或框架自带的库（如 `System`、`java.util`、`React`）。
     2. **第三方库**: 通过包管理器安装的外部依赖（如 `Newtonsoft.Json`、`Serilog`、`lodash`）。
     3. **本地/项目内引用**: 项目内部的其他模块或文件。

3. **执行验证**: 在代码和引用都更新完成后，再执行**编译、构建或代码检查**来验证更改的正确性。

## 目的

遵循此协议可以**最大限度地减少因引用错误导致的编译/运行失败**，从而避免不必要的迭代和调试，显著提高重构效率，并保持代码库的整洁。
