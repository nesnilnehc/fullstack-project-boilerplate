stages:          # List of stages for jobs and their order of execution
  - build
  - test
  - deploy

.standard-rules:       # Make a hidden job to hold the common rules
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

variables:
  CI_LOG_LEVEL: "debug"
  CI_OUTPUT_LIMIT: 100000  # 设置日志大小限制为100,000 KB。防止 JOB 运行日志不完整的问题。
  PROJECT_KEY: "recloud-jcy-v2-mdm" # SonarQube 对应的项目名称

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - echo "Compiling the code..."
    - echo "Compile complete."
  tags:
    - ReCloud # GitLab Runner 的过滤标签。

test-job-unit:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests... This will take about 1 seconds."
    - echo "Code coverage is 90%"
  tags:
    - ReCloud

test-job-lint:   # This job runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 1 seconds."
    - echo "No lint issues found."
  tags:
    - ReCloud

test-job-sonarqube-server:
  stage: test
  image: nrm.recloud.com.cn:44382/maven:3.6.3-jdk-11
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - cd src/server
    - mvn -Dsonar.host.url=$SONAR_HOST_URL_FOR_RECLOUD_JCY -Dsonar.login=$SONAR_TOKEN_FOR_RECLOUD_JCY -Dmaven.test.skip=true -Dmaven.repo.local=/root/.m2/ verify sonar:sonar -Dsonar.projectKey=${PROJECT_KEY} -Dsonar.language=java -Dsonar.java.binaries=target/classes -Dsonar.qualitygate.wait=true
    # - mvn test
    # 获取 SonarQube 扫描的结果
    - STATUS=$(curl -u $SONAR_TOKEN_FOR_RECLOUD_JCY -s "$SONAR_HOST_URL_FOR_RECLOUD_JCY/api/qualitygates/project_status?projectKey=${PROJECT_KEY}" | awk '{match($0, /"status":"[^"]+"/); print substr($0, RSTART+10, RLENGTH-11)}')
    - echo $STATUS
    - if [ "$STATUS" != "OK" ]; then echo "Quality Gate check failed"; exit 1; fi
  allow_failure: false
  tags:
    - ReCloud

test-job-sonarqube-web:
  stage: test
  image: sonarsource/sonar-scanner-cli:4.8.1
  script:
    - git fetch --unshallow
    - sonar-scanner -Dsonar.host.url=$SONAR_HOST_URL_FOR_RECLOUD_JCY -Dsonar.login=$SONAR_TOKEN_FOR_RECLOUD_JCY -Dsonar.branch.name=$CI_COMMIT_BRANCH -Dsonar.projectKey=${PROJECT_KEY}-web -Dsonar.sources=src/web
    - STATUS=$(curl -u $SONAR_TOKEN_FOR_RECLOUD_JCY -s "$SONAR_HOST_URL_FOR_RECLOUD_JCY/api/qualitygates/project_status?projectKey=${PROJECT_KEY}-web" | awk '{match($0, /"status":"[^"]+"/); print substr($0, RSTART+10, RLENGTH-11)}')
    - echo $STATUS
    - if [ "$STATUS" != "OK" ]; then echo "Quality Gate check failed"; exit 1; fi
  allow_failure: false
  tags:
    - ReCloud

test-job-sonarqube-web-hybrid:
  stage: test
  image: sonarsource/sonar-scanner-cli:4.8.1
  script:
    - git fetch --unshallow
    - sonar-scanner -Dsonar.host.url=$SONAR_HOST_URL_FOR_RECLOUD_JCY -Dsonar.login=$SONAR_TOKEN_FOR_RECLOUD_JCY -Dsonar.branch.name=$CI_COMMIT_BRANCH -Dsonar.projectKey=${PROJECT_KEY}-web-hybrid -Dsonar.sources=src/web-hybrid
    - STATUS=$(curl -u $SONAR_TOKEN_FOR_RECLOUD_JCY -s "$SONAR_HOST_URL_FOR_RECLOUD_JCY/api/qualitygates/project_status?projectKey=${PROJECT_KEY}-web-hybrid" | awk '{match($0, /"status":"[^"]+"/); print substr($0, RSTART+10, RLENGTH-11)}')
    - echo $STATUS
    - if [ "$STATUS" != "OK" ]; then echo "Quality Gate check failed"; exit 1; fi
  allow_failure: false
  tags:
    - ReCloud

test-job-notify:
  stage: test
  image: curlimages/curl:latest
  cache:
    key: curl-image
    paths:
      - /usr/local/bin/curl
  script:
      - curl 'https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=ab58e51f-f8cf-4bf4-9909-f1200e6c22f5' -H 'Content-Type:application/json' -d "{\"msgtype\":\"text\",\"text\":{\"mentioned_list\":[\"$GITLAB_USER_LOGIN\"],\"content\":\"您提交的合并请求未通过测试，请及时处理！\n项目名称：$CI_PROJECT_NAME\n构建分支：$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME\n提交日志：$CI_COMMIT_MESSAGE\nPipeline 地址：$CI_PIPELINE_URL\"}}"
  when: on_failure
  needs:
    - job: test-job-sonarqube-server
      optional: true
    - job: test-job-sonarqube-web
      optional: true
    - job: test-job-sonarqube-web-hybrid
      optional: true
  tags:
    - ReCloud

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
  tags:
    - ReCloud
